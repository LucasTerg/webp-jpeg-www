{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// Funkcja do dynamicznego ładowania plików HTML\nasync function loadPartials() {\n  // Pobierz wszystkie elementy z atrybutem data-load\n  const loadElements = document.querySelectorAll('[data-load]');\n\n  for (const element of loadElements) {\n    const src = element.getAttribute('src');\n    if (!src) continue;\n\n    try {\n      const response = await fetch(src);\n      if (!response.ok) {\n        console.error(`Nie udało się załadować ${src}: ${response.status}`);\n        element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n        continue;\n      }\n\n      const content = await response.text();\n      element.innerHTML = content;\n\n      // Opcjonalnie: obsługa dynamicznych ścieżek, np. data-icon-path\n      const iconPath = element.getAttribute('data-icon-path');\n      if (iconPath) {\n        const icon = element.querySelector('[data-icon]');\n        if (icon) icon.setAttribute('src', iconPath);\n      }\n    } catch (error) {\n      console.error(`Błąd ładowania ${src}:`, error);\n      element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n    }\n  }\n}\n\n// Wywołaj funkcję po załadowaniu DOM\ndocument.addEventListener('DOMContentLoaded', loadPartials);\n"],"names":["loadPartials","loadElements","element","src","response","content","iconPath","icon","error"],"mappings":"0uBACA,eAAeA,GAAe,CAE5B,MAAMC,EAAe,SAAS,iBAAiB,aAAa,EAE5D,UAAWC,KAAWD,EAAc,CAClC,MAAME,EAAMD,EAAQ,aAAa,KAAK,EACtC,GAAKC,EAEL,GAAI,CACF,MAAMC,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GAAI,CAChB,QAAQ,MAAM,2BAA2BD,CAAG,KAAKC,EAAS,MAAM,EAAE,EAClEF,EAAQ,UAAY,sBAAsBC,CAAG,OAC7C,QACD,CAED,MAAME,EAAU,MAAMD,EAAS,OAC/BF,EAAQ,UAAYG,EAGpB,MAAMC,EAAWJ,EAAQ,aAAa,gBAAgB,EACtD,GAAII,EAAU,CACZ,MAAMC,EAAOL,EAAQ,cAAc,aAAa,EAC5CK,GAAMA,EAAK,aAAa,MAAOD,CAAQ,CAC5C,CACF,OAAQE,EAAO,CACd,QAAQ,MAAM,kBAAkBL,CAAG,IAAKK,CAAK,EAC7CN,EAAQ,UAAY,sBAAsBC,CAAG,MAC9C,CACF,CACH,CAGA,SAAS,iBAAiB,mBAAoBH,CAAY"}