{"version":3,"file":"index.js","sources":["../src/main.js","../src/js/script.js"],"sourcesContent":["// Funkcja do dynamicznego ładowania plików HTML\nasync function loadPartials() {\n  // Pobierz wszystkie elementy z atrybutem data-load\n  const loadElements = document.querySelectorAll('[data-load]');\n\n  for (const element of loadElements) {\n    const src = element.getAttribute('src');\n    if (!src) continue;\n\n    try {\n      const response = await fetch(src);\n      if (!response.ok) {\n        console.error(`Nie udało się załadować ${src}: ${response.status}`);\n        element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n        continue;\n      }\n\n      const content = await response.text();\n      element.innerHTML = content;\n\n      // Opcjonalnie: obsługa dynamicznych ścieżek, np. data-icon-path\n      const iconPath = element.getAttribute('data-icon-path');\n      if (iconPath) {\n        const icon = element.querySelector('[data-icon]');\n        if (icon) icon.setAttribute('src', iconPath);\n      }\n    } catch (error) {\n      console.error(`Błąd ładowania ${src}:`, error);\n      element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n    }\n  }\n}\n\n// Wywołaj funkcję po załadowaniu DOM\ndocument.addEventListener('DOMContentLoaded', loadPartials);\n","document.addEventListener('DOMContentLoaded', () => {\n  const form = document.getElementById('upload-form');\n  const fileInput = document.getElementById('file-input');\n  const baseFileNameInput = document.getElementById('base-file-name');\n  const downloadLink = document.getElementById('download-link');\n\n  // Funkcja do normalizacji nazwy pliku\n  function normalizeFileName(fileName) {\n    return fileName\n      .replace(/\\s+/g, '-')\n      .replace(/ą/g, 'a').replace(/ć/g, 'c').replace(/ę/g, 'e')\n      .replace(/ł/g, 'l').replace(/ń/g, 'n').replace(/ó/g, 'o')\n      .replace(/ś/g, 's').replace(/ź/g, 'z').replace(/ż/g, 'z')\n      .replace(/Ą/g, 'A').replace(/Ć/g, 'C').replace(/Ę/g, 'E')\n      .replace(/Ł/g, 'L').replace(/Ń/g, 'N').replace(/Ó/g, 'O')\n      .replace(/Ś/g, 'S').replace(/Ź/g, 'Z').replace(/Ż/g, 'Z')\n      .replace(/\\(/g, '').replace(/\\)/g, '').replace(/,/g, '')\n      .toLowerCase();\n  }\n\n  // Obsługa wklejania ze schowka\n  baseFileNameInput.addEventListener('mouseenter', async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      baseFileNameInput.value = normalizeFileName(text);\n    } catch (err) {\n      console.error('Failed to read clipboard contents: ', err);\n    }\n  });\n\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    if (!fileInput.files.length) {\n      alert('Proszę wybrać pliki!');\n      return;\n    }\n\n    const formData = new FormData();\n    Array.from(fileInput.files).forEach(file => {\n      formData.append('images', file);\n    });\n\n    // Dodaj nazwę bazową pliku do formData\n    formData.append('baseFileName', baseFileNameInput.value);\n\n    try {\n      const response = await fetch('http://localhost:3000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const blob = await response.blob();\n        downloadLink.href = URL.createObjectURL(blob);\n        downloadLink.style.display = 'inline-block';\n        downloadLink.textContent = 'Pobierz spakowane zdjęcia';\n        downloadLink.download = 'converted_images.zip';\n      } else {\n        alert('Wystąpił błąd podczas przetwarzania plików.');\n      }\n    } catch (error) {\n      console.error('Błąd:', error);\n      alert('Nie udało się połączyć z serwerem.');\n    }\n  });\n});\n"],"names":["loadPartials","loadElements","element","src","response","content","iconPath","icon","error","form","fileInput","baseFileNameInput","downloadLink","normalizeFileName","fileName","text","err","event","formData","file","blob"],"mappings":"0uBACA,eAAeA,GAAe,CAE5B,MAAMC,EAAe,SAAS,iBAAiB,aAAa,EAE5D,UAAWC,KAAWD,EAAc,CAClC,MAAME,EAAMD,EAAQ,aAAa,KAAK,EACtC,GAAKC,EAEL,GAAI,CACF,MAAMC,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GAAI,CAChB,QAAQ,MAAM,2BAA2BD,CAAG,KAAKC,EAAS,MAAM,EAAE,EAClEF,EAAQ,UAAY,sBAAsBC,CAAG,OAC7C,QACR,CAEM,MAAME,EAAU,MAAMD,EAAS,KAAM,EACrCF,EAAQ,UAAYG,EAGpB,MAAMC,EAAWJ,EAAQ,aAAa,gBAAgB,EACtD,GAAII,EAAU,CACZ,MAAMC,EAAOL,EAAQ,cAAc,aAAa,EAC5CK,GAAMA,EAAK,aAAa,MAAOD,CAAQ,CACnD,CACK,OAAQE,EAAO,CACd,QAAQ,MAAM,kBAAkBL,CAAG,IAAKK,CAAK,EAC7CN,EAAQ,UAAY,sBAAsBC,CAAG,MACnD,CACA,CACA,CAGA,SAAS,iBAAiB,mBAAoBH,CAAY,EClC1D,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMS,EAAO,SAAS,eAAe,aAAa,EAC5CC,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAoB,SAAS,eAAe,gBAAgB,EAC5DC,EAAe,SAAS,eAAe,eAAe,EAG5D,SAASC,EAAkBC,EAAU,CACnC,OAAOA,EACJ,QAAQ,OAAQ,GAAG,EACnB,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EAAE,QAAQ,KAAM,GAAG,EACvD,QAAQ,MAAO,EAAE,EAAE,QAAQ,MAAO,EAAE,EAAE,QAAQ,KAAM,EAAE,EACtD,YAAa,CACpB,CAGEH,EAAkB,iBAAiB,aAAc,SAAY,CAC3D,GAAI,CACF,MAAMI,EAAO,MAAM,UAAU,UAAU,SAAU,EACjDJ,EAAkB,MAAQE,EAAkBE,CAAI,CACjD,OAAQC,EAAK,CACZ,QAAQ,MAAM,sCAAuCA,CAAG,CAC9D,CACA,CAAG,EAEDP,EAAK,iBAAiB,SAAU,MAAMQ,GAAS,CAG7C,GAFAA,EAAM,eAAgB,EAElB,CAACP,EAAU,MAAM,OAAQ,CAC3B,MAAM,sBAAsB,EAC5B,MACN,CAEI,MAAMQ,EAAW,IAAI,SACrB,MAAM,KAAKR,EAAU,KAAK,EAAE,QAAQS,GAAQ,CAC1CD,EAAS,OAAO,SAAUC,CAAI,CACpC,CAAK,EAGDD,EAAS,OAAO,eAAgBP,EAAkB,KAAK,EAEvD,GAAI,CACF,MAAMP,EAAW,MAAM,MAAM,+BAAgC,CAC3D,OAAQ,OACR,KAAMc,CACd,CAAO,EAED,GAAId,EAAS,GAAI,CACf,MAAMgB,EAAO,MAAMhB,EAAS,KAAM,EAClCQ,EAAa,KAAO,IAAI,gBAAgBQ,CAAI,EAC5CR,EAAa,MAAM,QAAU,eAC7BA,EAAa,YAAc,4BAC3BA,EAAa,SAAW,sBAChC,MACQ,MAAM,6CAA6C,CAEtD,OAAQJ,EAAO,CACd,QAAQ,MAAM,QAASA,CAAK,EAC5B,MAAM,oCAAoC,CAChD,CACA,CAAG,CACH,CAAC"}