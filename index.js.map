{"version":3,"file":"index.js","sources":["../src/main.js","../src/js/script.js"],"sourcesContent":["// Funkcja do dynamicznego ładowania plików HTML\nasync function loadPartials() {\n  // Pobierz wszystkie elementy z atrybutem data-load\n  const loadElements = document.querySelectorAll('[data-load]');\n\n  for (const element of loadElements) {\n    const src = element.getAttribute('src');\n    if (!src) continue;\n\n    try {\n      const response = await fetch(src);\n      if (!response.ok) {\n        console.error(`Nie udało się załadować ${src}: ${response.status}`);\n        element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n        continue;\n      }\n\n      const content = await response.text();\n      element.innerHTML = content;\n\n      // Opcjonalnie: obsługa dynamicznych ścieżek, np. data-icon-path\n      const iconPath = element.getAttribute('data-icon-path');\n      if (iconPath) {\n        const icon = element.querySelector('[data-icon]');\n        if (icon) icon.setAttribute('src', iconPath);\n      }\n    } catch (error) {\n      console.error(`Błąd ładowania ${src}:`, error);\n      element.innerHTML = `<p>Błąd ładowania: ${src}</p>`;\n    }\n  }\n}\n\n// Wywołaj funkcję po załadowaniu DOM\ndocument.addEventListener('DOMContentLoaded', loadPartials);\n","document\n  .getElementById('upload-form')\n  .addEventListener('submit', async event => {\n    event.preventDefault();\n\n    const fileInput = document.getElementById('file-input');\n    const fileNameInput = document.getElementById('file-name');\n    if (!fileInput.files.length) {\n      alert('Proszę wybrać zdjęcia!');\n      return;\n    }\n\n    const formData = new FormData();\n    Array.from(fileInput.files).forEach(file =>\n      formData.append('images', file)\n    );\n\n    // Dodaj nazwę pliku do formData\n    formData.append('newName', fileNameInput.value);\n\n    const progressContainer = document.getElementById('progress-container');\n    const progressBar = document.getElementById('progress-bar');\n    const progressText = document.getElementById('progress-text');\n\n    progressContainer.style.display = 'block';\n    progressBar.style.width = '0%';\n    progressText.textContent = 'Rozpoczynanie przetwarzania...';\n\n    try {\n      const response = await fetch('http://localhost:3000/upload', {\n        // Zmiana URL na właściwy backend\n        method: 'POST',\n        body: formData,\n      });\n\n      //     if (response.ok) {\n      //       const blob = await response.blob();\n      //       const downloadLink = document.getElementById('download-link');\n      //       downloadLink.href = URL.createObjectURL(blob);\n      //       downloadLink.style.display = 'inline-block';\n      //       downloadLink.textContent = 'Pobierz spakowane zdjęcia';\n      //       downloadLink.download = 'cropped_images.zip';\n      //     } else {\n      //       alert('Wystąpił błąd podczas przetwarzania zdjęć.');\n      //     }\n      //   } catch (error) {\n      //     console.error('Błąd:', error);\n      //     alert('Nie udało się połączyć z serwerem.');\n      //   }\n      // });\n\n      if (response.ok) {\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          // Handle JSON response\n          const jsonResponse = await response.json();\n          console.log('Server response:', jsonResponse);\n          // Handle the JSON response as needed\n          progressText.textContent = 'Przetwarzanie zakończone!';\n          progressDetails.textContent = 'Serwer zwrócił dane JSON.';\n        } else {\n          // Handle non-JSON response (e.g., file download)\n          const blob = await response.blob();\n          const downloadLink = document.getElementById('download-link');\n          downloadLink.href = URL.createObjectURL(blob);\n          downloadLink.style.display = 'inline-block';\n          downloadLink.textContent = 'Pobierz spakowane zdjęcia';\n          downloadLink.download = 'cropped_images.zip';\n        }\n\n        progressText.textContent = 'Przetwarzanie zakończone!';\n      } else {\n        const errorText = await response.text();\n        throw new Error(\n          `Błąd serwera: ${response.status} ${response.statusText}\\n${errorText}`\n        );\n      }\n    } catch (error) {\n      console.error('Błąd:', error);\n      alert(`Wystąpił błąd: ${error.message}`);\n      progressText.textContent = 'Wystąpił błąd podczas przetwarzania.';\n    }\n  });\n"],"names":["loadPartials","loadElements","element","src","response","content","iconPath","icon","error","event","fileInput","fileNameInput","formData","file","progressContainer","progressBar","progressText","contentType","jsonResponse","blob","downloadLink","errorText"],"mappings":"0uBACA,eAAeA,GAAe,CAE5B,MAAMC,EAAe,SAAS,iBAAiB,aAAa,EAE5D,UAAWC,KAAWD,EAAc,CAClC,MAAME,EAAMD,EAAQ,aAAa,KAAK,EACtC,GAAKC,EAEL,GAAI,CACF,MAAMC,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GAAI,CAChB,QAAQ,MAAM,2BAA2BD,CAAG,KAAKC,EAAS,MAAM,EAAE,EAClEF,EAAQ,UAAY,sBAAsBC,CAAG,OAC7C,QACR,CAEM,MAAME,EAAU,MAAMD,EAAS,KAAM,EACrCF,EAAQ,UAAYG,EAGpB,MAAMC,EAAWJ,EAAQ,aAAa,gBAAgB,EACtD,GAAII,EAAU,CACZ,MAAMC,EAAOL,EAAQ,cAAc,aAAa,EAC5CK,GAAMA,EAAK,aAAa,MAAOD,CAAQ,CACnD,CACK,OAAQE,EAAO,CACd,QAAQ,MAAM,kBAAkBL,CAAG,IAAKK,CAAK,EAC7CN,EAAQ,UAAY,sBAAsBC,CAAG,MACnD,CACA,CACA,CAGA,SAAS,iBAAiB,mBAAoBH,CAAY,EClC1D,SACG,eAAe,aAAa,EAC5B,iBAAiB,SAAU,MAAMS,GAAS,CACzCA,EAAM,eAAgB,EAEtB,MAAMC,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAgB,SAAS,eAAe,WAAW,EACzD,GAAI,CAACD,EAAU,MAAM,OAAQ,CAC3B,MAAM,wBAAwB,EAC9B,MACN,CAEI,MAAME,EAAW,IAAI,SACrB,MAAM,KAAKF,EAAU,KAAK,EAAE,QAAQG,GAClCD,EAAS,OAAO,SAAUC,CAAI,CAC/B,EAGDD,EAAS,OAAO,UAAWD,EAAc,KAAK,EAE9C,MAAMG,EAAoB,SAAS,eAAe,oBAAoB,EAChEC,EAAc,SAAS,eAAe,cAAc,EACpDC,EAAe,SAAS,eAAe,eAAe,EAE5DF,EAAkB,MAAM,QAAU,QAClCC,EAAY,MAAM,MAAQ,KAC1BC,EAAa,YAAc,iCAE3B,GAAI,CACF,MAAMZ,EAAW,MAAM,MAAM,+BAAgC,CAE3D,OAAQ,OACR,KAAMQ,CACd,CAAO,EAkBD,GAAIR,EAAS,GAAI,CACf,MAAMa,EAAcb,EAAS,QAAQ,IAAI,cAAc,EACvD,GAAIa,GAAeA,EAAY,SAAS,kBAAkB,EAAG,CAE3D,MAAMC,EAAe,MAAMd,EAAS,KAAM,EAC1C,QAAQ,IAAI,mBAAoBc,CAAY,EAE5CF,EAAa,YAAc,4BAC3B,gBAAgB,YAAc,2BACxC,KAAe,CAEL,MAAMG,EAAO,MAAMf,EAAS,KAAM,EAC5BgB,EAAe,SAAS,eAAe,eAAe,EAC5DA,EAAa,KAAO,IAAI,gBAAgBD,CAAI,EAC5CC,EAAa,MAAM,QAAU,eAC7BA,EAAa,YAAc,4BAC3BA,EAAa,SAAW,oBAClC,CAEQJ,EAAa,YAAc,2BACnC,KAAa,CACL,MAAMK,EAAY,MAAMjB,EAAS,KAAM,EACvC,MAAM,IAAI,MACR,iBAAiBA,EAAS,MAAM,IAAIA,EAAS,UAAU;AAAA,EAAKiB,CAAS,EACtE,CACT,CACK,OAAQb,EAAO,CACd,QAAQ,MAAM,QAASA,CAAK,EAC5B,MAAM,kBAAkBA,EAAM,OAAO,EAAE,EACvCQ,EAAa,YAAc,sCACjC,CACA,CAAG"}