/* empty css                      */(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();async function s(){const c=document.querySelectorAll("[data-load]");for(const o of c){const r=o.getAttribute("src");if(r)try{const n=await fetch(r);if(!n.ok){console.error(`Nie udało się załadować ${r}: ${n.status}`),o.innerHTML=`<p>Błąd ładowania: ${r}</p>`;continue}const e=await n.text();o.innerHTML=e;const t=o.getAttribute("data-icon-path");if(t){const i=o.querySelector("[data-icon]");i&&i.setAttribute("src",t)}}catch(n){console.error(`Błąd ładowania ${r}:`,n),o.innerHTML=`<p>Błąd ładowania: ${r}</p>`}}}document.addEventListener("DOMContentLoaded",s);
//# sourceMappingURL=index.js.map
