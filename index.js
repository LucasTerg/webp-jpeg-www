/* empty css                      */(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();async function p(){const i=document.querySelectorAll("[data-load]");for(const o of i){const a=o.getAttribute("src");if(a)try{const n=await fetch(a);if(!n.ok){console.error(`Nie udało się załadować ${a}: ${n.status}`),o.innerHTML=`<p>Błąd ładowania: ${a}</p>`;continue}const e=await n.text();o.innerHTML=e;const t=o.getAttribute("data-icon-path");if(t){const s=o.querySelector("[data-icon]");s&&s.setAttribute("src",t)}}catch(n){console.error(`Błąd ładowania ${a}:`,n),o.innerHTML=`<p>Błąd ładowania: ${a}</p>`}}}document.addEventListener("DOMContentLoaded",p);document.getElementById("upload-form").addEventListener("submit",async i=>{i.preventDefault();const o=document.getElementById("file-input"),a=document.getElementById("file-name");if(!o.files.length){alert("Proszę wybrać zdjęcia!");return}const n=new FormData;Array.from(o.files).forEach(r=>n.append("images",r)),n.append("newName",a.value);const e=document.getElementById("progress-container"),t=document.getElementById("progress-bar"),s=document.getElementById("progress-text");e.style.display="block",t.style.width="0%",s.textContent="Rozpoczynanie przetwarzania...";try{const r=await fetch("http://localhost:3000/upload",{method:"POST",body:n});if(r.ok){const c=r.headers.get("content-type");if(c&&c.includes("application/json")){const l=await r.json();console.log("Server response:",l),s.textContent="Przetwarzanie zakończone!",progressDetails.textContent="Serwer zwrócił dane JSON."}else{const l=await r.blob(),d=document.getElementById("download-link");d.href=URL.createObjectURL(l),d.style.display="inline-block",d.textContent="Pobierz spakowane zdjęcia",d.download="cropped_images.zip"}s.textContent="Przetwarzanie zakończone!"}else{const c=await r.text();throw new Error(`Błąd serwera: ${r.status} ${r.statusText}
${c}`)}}catch(r){console.error("Błąd:",r),alert(`Wystąpił błąd: ${r.message}`),s.textContent="Wystąpił błąd podczas przetwarzania."}});
//# sourceMappingURL=index.js.map
