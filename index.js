/* empty css                      */(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function a(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?e.credentials="include":t.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function o(t){if(t.ep)return;t.ep=!0;const e=a(t);fetch(t.href,e)}})();async function s(){const i=document.querySelectorAll("[data-load]");for(const r of i){const a=r.getAttribute("src");if(a)try{const o=await fetch(a);if(!o.ok){console.error(`Nie udało się załadować ${a}: ${o.status}`),r.innerHTML=`<p>Błąd ładowania: ${a}</p>`;continue}const t=await o.text();r.innerHTML=t;const e=r.getAttribute("data-icon-path");if(e){const n=r.querySelector("[data-icon]");n&&n.setAttribute("src",e)}}catch(o){console.error(`Błąd ładowania ${a}:`,o),r.innerHTML=`<p>Błąd ładowania: ${a}</p>`}}}document.addEventListener("DOMContentLoaded",s);document.addEventListener("DOMContentLoaded",()=>{const i=document.getElementById("upload-form"),r=document.getElementById("file-input"),a=document.getElementById("base-file-name"),o=document.getElementById("download-link");function t(e){return e.replace(/\s+/g,"-").replace(/ą/g,"a").replace(/ć/g,"c").replace(/ę/g,"e").replace(/ł/g,"l").replace(/ń/g,"n").replace(/ó/g,"o").replace(/ś/g,"s").replace(/ź/g,"z").replace(/ż/g,"z").replace(/Ą/g,"A").replace(/Ć/g,"C").replace(/Ę/g,"E").replace(/Ł/g,"L").replace(/Ń/g,"N").replace(/Ó/g,"O").replace(/Ś/g,"S").replace(/Ź/g,"Z").replace(/Ż/g,"Z").replace(/\(/g,"").replace(/\)/g,"").replace(/,/g,"").toLowerCase()}a.addEventListener("mouseenter",async()=>{try{const e=await navigator.clipboard.readText();a.value=t(e)}catch(e){console.error("Failed to read clipboard contents: ",e)}}),i.addEventListener("submit",async e=>{if(e.preventDefault(),!r.files.length){alert("Proszę wybrać pliki!");return}const n=new FormData;Array.from(r.files).forEach(c=>{n.append("images",c)}),n.append("baseFileName",a.value);try{const c=await fetch("http://localhost:3000/upload",{method:"POST",body:n});if(c.ok){const l=await c.blob();o.href=URL.createObjectURL(l),o.style.display="inline-block",o.textContent="Pobierz spakowane zdjęcia",o.download="converted_images.zip"}else alert("Wystąpił błąd podczas przetwarzania plików.")}catch(c){console.error("Błąd:",c),alert("Nie udało się połączyć z serwerem.")}})});
//# sourceMappingURL=index.js.map
